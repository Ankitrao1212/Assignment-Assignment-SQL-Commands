-- SQL Assignemnt - 2

-- Retrieve the total number of rentals made in the Sakila database.
-- Answer 
select count(rental_id) from rental;

-- Find the average rental duration (in days) of movies rented from the Sakila database.
-- Answer 
select avg ( rental_duration) as avg_rental_days from film;

-- Display the first name and last name of customers in uppercase.
-- Answer 
select upper(first_name) , upper(last_name) from customer;

-- Extract the month from the rental date and display it alongside the rental ID. 
-- Answer
select month(rental_date), rental_id from rental;

-- Retrieve the count of rentals for each customer (display customer ID and the count of rentals). 
-- Answer
select customer_id, count(rental_id ) from rental group by customer_id;

-- Find the total revenue generated by each store.
-- Answer
select staff_id, sum(amount) from payment group by staff_id;
select store_id , sum(amount) from payment inner join staff on staff.store_id = payment.staff_id group by store_id;

-- Display the title of the movie, customer s first name, and last name who rented it.
-- Answer
select title, first_name , last_name from customer inner join rental on rental.customer_id = customer.customer_id
inner join inventory on inventory.inventory_id = rental.inventory_id 
inner join film on film.film_id = inventory.film_id;

-- Retrieve the names of all actors who have appeared in the film "Gone with the Wind."
-- Answer 
select first_name , last_name from actor a inner join film_actor fa on 
fa.actor_id =  a.actor_id inner join film on film.film_id = fa.film_id
 where title = 'Gone with the Wind';
 
 -- Determine the total number of rentals for each category of movies.
-- Answer
 select category_id ,count(rental_id) from film_category inner join film f on f.film_id = film_category.film_id inner join inventory i on i.film_id = f.film_id
 inner join rental r on r.inventory_id = i.inventory_id group by category_id;
 
 -- Find the average rental rate of movies in each language.
 -- Answer 
select name film_name , avg(rental_rate) from film inner join language l
 on l.language_id = film.language_id group by name;
 
 -- Retrieve the customer names along with the total amount they've spent on rentals.
-- Answer
 select first_name , last_name, sum(amount) from customer inner join payment p on p.customer_id = customer.customer_id 
 group by first_name , last_name;
 
 -- List the titles of movies rented by each customer in a particular city (e.g., 'London').
 -- Answer
 select first_name , last_name, city ,title from customer C inner join address A on a.address_id = C.address_id
 inner join city on city.city_id = A.city_id inner join rental R on R.customer_id = C.customer_id
 inner join inventory I on R.inventory_id = I.inventory_id inner join film on film.film_id = I.film_id where city = "london";
 
 -- Display the top 5 rented movies along with the number of times they've been rented.
-- Answer
 select title , count(rental_id) as rental_count from rental inner join inventory I on I.inventory_id = rental.inventory_id
 inner join film on film.film_id = I.film_id group by title order by rental_count desc limit 5;
 
 -- Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
-- Answer
 select first_name , last_name  from rental R inner join inventory I on I.inventory_id = R.inventory_id
 inner join customer c on c.store_id = I.store_id where I.store_id in (1,2) group by first_name, last_name having count(distinct I.store_id) = 2